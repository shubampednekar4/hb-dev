{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
<?php
/**
 * @var \{{ namespace }}\View\AppView $this
 * @var \{{ entityClass }}[]|\Cake\Collection\CollectionInterface ${{ pluralVar }}
 */
?>
{% set fields = Bake.filterFields(fields, schema, modelObject, indexColumns, ['binary', 'text']) %}
{% set done = [] %}
<div class="card">
    <!-- todo: change card header semantic coloring -->
    <header class="card-header card-header-primary">
        <h2 class="card-title"><?= __('{{ pluralHumanName }}') ?></h2>
        <p class="card-category"><?= __('Manage {{ pluralHumanName }}') ?></p>
    </header>
    <section class="card-body">
        <?= $this->Html->link(__('New {{ singularVar|underscore|humanize }} <i class="fas fa-plus-circle"></i>'), ['action' => 'add'], [
            'class' => 'btn btn-info float-right',
            'escape' => false
        ]) ?>
        <table class="table table-full-width table-responsive-md table-striped">
            <thead>
            <tr>
                {% for field in fields %}
                    <th><?= $this->Paginator->sort('{{ field }}') ?></th>
                {% endfor %}
                <th class="actions"><?= __('Actions') ?></th>
            </tr>
            </thead>
            <tbody>
            <?php foreach (${{ pluralVar }} as ${{ singularVar }}): ?>
            <tr>
                {% for field in fields %}
                    {% set isKey = false %}
                    {% if associations.BelongsTo is defined %}
                        {% for alias, details in associations.BelongsTo %}
                            {% if field == details.foreignKey %}
                                {% set isKey = true %}
                                <td><?= ${{ singularVar }}->has('{{ details.property }}') ? $this->Html->link(${{ singularVar }}->{{ details.property }}->{{ details.displayField }}, ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar }}->{{ details.property }}->{{ details.primaryKey[0] }}]) : '' ?></td>
                            {% endif %}
                        {% endfor %}
                    {% endif %}
                    {% if isKey is not same as(true) %}
                        {% set columnData = Bake.columnData(field, schema) %}
                        {% if columnData.type not in ['integer', 'float', 'decimal', 'biginteger', 'smallinteger', 'tinyinteger', 'datetime'] %}
                            <td><?= h(${{ singularVar }}->{{ field }}) ?></td>
                        {% else %}
                            <td><?= $this->Number->format(${{ singularVar }}->{{ field }}) ?></td>
                        {% endif %}
                    {% endif %}
                {% endfor %}
                {% set pk = '$' ~ singularVar ~ '->' ~ primaryKey[0] %}
                <td class="actions">
                    <?= $this->Html->link('<i class="fas fa-eye"></i> ' . __('View'), ['action' => 'view', {{ pk|raw }}], ['escape' => false, 'class' => 'btn btn-sm btn-primary']) ?>
                    <?= $this->Html->link('<i class="fas fa-edit"></i> ' . __('Edit'), ['action' => 'edit', {{ pk|raw }}], ['escape' => false, 'class' => 'btn btn-sm btn-success']) ?>
                    <?= $this->Form->postLink('<i class="fas fa-trash"></i> ' . __('Delete'), ['action' => 'delete', {{ pk|raw }}], ['confirm' => __('Are you sure you want to delete # {0}?', {{ pk|raw }}), 'escape' => false, 'class' => 'btn btn-sm btn-danger']) ?>
                </td>
            </tr>
            <?php endforeach; ?>
            </tbody>
        </table>
        <div class="paginator">
            <ul class="pagination">
                <?= $this->Paginator->first('<span class="btn btn-info"><i class="fas fa-fast-backward"></i></span>', ['escape' => false]) ?>
                <?= $this->Paginator->prev('<span class="btn btn-info"><i class="fas fa-backward"></i></span>', ['escape' => false]) ?>
                <?= $this->Paginator->numbers() ?>
                <?= $this->Paginator->next('<span class="btn btn-info"><i class="fas fa-forward"></i></span>', ['escape' => false]) ?>
                <?= $this->Paginator->last('<span class="btn btn-info"><i class="fas fa-fast-forward"></i></span>', ['escape' => false]) ?>
            </ul>
            <p><?= $this->Paginator->counter(__('Page {{ '{{' }}page{{ '}}' }} of {{ '{{' }}pages{{ '}}' }}, showing {{ '{{' }}current{{ '}}' }} record(s) out of {{ '{{' }}count{{ '}}' }} total')) ?></p>
        </div>
    </section>
</div>

